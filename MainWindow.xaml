<Window x:Class="TicTacToe.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:TicTacToe"
        Title="Tic Tac Toe"
        SizeToContent="WidthAndHeight"
        ResizeMode="CanMinimize"
        Icon="/Tic%20Tac%20Toe;component/Tic%20Tac%20Toe.ico">
    <Window.Resources>
        <local:MainViewModel x:Key="MainViewModel"/>

        <local:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
        <local:EqualityToBoolConverter x:Key="EqualityToBoolConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:StatsForCurrentLevelConverter x:Key="StatsForCurrentLevelConverter"/>

        <local:OccupierToStyleConverter x:Key="OccupierToStyleConverter">
            <local:OccupierToStyleConverter.BaseStyle>
                <Style TargetType="Button">
                    <Setter Property="Height"
                            Value="85" />
                    <Setter Property="Width"
                            Value="85" />
                    <Setter Property="FontSize"
                            Value="40" />
                    <Setter Property="FontFamily"
                            Value="Segoe Print" />
                    <Setter Property="Background"
                            Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ButtonBase}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Button.IsDefaulted" Value="True">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                                    </Trigger>
                                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                                        <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                        <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </local:OccupierToStyleConverter.BaseStyle>
        </local:OccupierToStyleConverter>

        <local:ComposingConverter x:Key="EqualityToVisibilityConverter">
            <local:ComposingConverter.Converters>
                <StaticResource ResourceKey="EqualityToBoolConverter"/>
                <StaticResource ResourceKey="BooleanToVisibilityConverter"/>
            </local:ComposingConverter.Converters>
        </local:ComposingConverter>
    </Window.Resources>
    <Window.DataContext>
        <StaticResource ResourceKey="MainViewModel"/>
    </Window.DataContext>
    <Grid>
        <StackPanel>
            <DockPanel>
                <StackPanel Margin="3"
                            DockPanel.Dock="Right">
                    <Label Content="Current Turn"
                           FontStyle="Italic"
                           Foreground="Gray"/>
                    <Button Style="{Binding CurrentTurn, Converter={StaticResource OccupierToStyleConverter}}"
                            BorderThickness="0"
                            FontSize="30"
                            Width="60"
                            Height="60"/>
                </StackPanel>
                <StackPanel>
                    <StackPanel Margin="5">
                        <RadioButton Content="Single Player"
                                     IsChecked="{Binding GameType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:GameType.SinglePlayer}}"/>
                        <RadioButton Content="Two Player"
                                     IsChecked="{Binding GameType, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:GameType.TwoPlayer}}"/>
                    </StackPanel>
                    <StackPanel Margin="5"
                                IsEnabled="{Binding GameType, Converter={StaticResource EqualityToBoolConverter}, ConverterParameter={x:Static local:GameType.SinglePlayer}}">
                        <RadioButton Content="Beginner"
                                     IsChecked="{Binding Level, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:Level.Beginner}}"/>
                        <RadioButton Content="Intermediate"
                                     IsChecked="{Binding Level, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:Level.Intermediate}}"/>
                        <RadioButton Content="Advanced"
                                     IsChecked="{Binding Level, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:Level.Advanced}}"/>
                        <RadioButton Content="Expert"
                                     IsChecked="{Binding Level, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static local:Level.Expert}}"/>
                    </StackPanel>
                </StackPanel>
            </DockPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{Binding Cells[0].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[0].ClickCommand}"/>
                <Button Style="{Binding Cells[1].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[1].ClickCommand}"/>
                <Button Style="{Binding Cells[2].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[2].ClickCommand}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{Binding Cells[3].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[3].ClickCommand}"/>
                <Button Style="{Binding Cells[4].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[4].ClickCommand}"/>
                <Button Style="{Binding Cells[5].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[5].ClickCommand}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Button Style="{Binding Cells[6].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[6].ClickCommand}"/>
                <Button Style="{Binding Cells[7].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[7].ClickCommand}"/>
                <Button Style="{Binding Cells[8].Occupier, Converter={StaticResource OccupierToStyleConverter}}"
                        Command="{Binding Cells[8].ClickCommand}"/>
            </StackPanel>
            <Grid Visibility="{Binding GameType, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static local:GameType.SinglePlayer}}"
                  Height="100"
                  ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Wins" 
                       FontStyle="Italic" 
                       Grid.Row="0" 
                       Grid.Column="0"/>
                <Label Content="This Level"
                       FontStyle="Italic"
                       Grid.Row="0"
                       Grid.Column="1"/>
                <Label Content="Total"
                       FontStyle="Italic"
                       Grid.Row="0"
                       Grid.Column="2"/>

                <Label Content="Player (X)"
                       FontStyle="Italic"
                       Grid.Row="1" 
                       Grid.Column="0"/>
                <Label Grid.Row="1" 
                       Grid.Column="1">
                    <MultiBinding Converter="{StaticResource StatsForCurrentLevelConverter}">
                        <Binding Path="Stats.SinglePlayer.Player"/>
                        <Binding Path="Level"/>
                    </MultiBinding>
                </Label>
                <Label Content="{Binding Stats.SinglePlayer.Player.Total}"
                       Grid.Row="1"
                       Grid.Column="2"/>

                <Label Content="Computer (0)"
                       FontStyle="Italic"
                       Grid.Row="2"
                       Grid.Column="0"/>
                <Label Grid.Row="2" 
                       Grid.Column="1">
                    <MultiBinding Converter="{StaticResource StatsForCurrentLevelConverter}">
                        <Binding Path="Stats.SinglePlayer.Computer"/>
                        <Binding Path="Level"/>
                    </MultiBinding>
                </Label>
                <Label Content="{Binding Stats.SinglePlayer.Computer.Total}"
                       Grid.Row="2"
                       Grid.Column="2"/>

                <Label Content="Draws"
                       FontStyle="Italic" 
                       Grid.Row="3"
                       Grid.Column="0"/>
                <Label Grid.Row="3"
                       Grid.Column="1">
                    <MultiBinding Converter="{StaticResource StatsForCurrentLevelConverter}">
                        <Binding Path="Stats.SinglePlayer.Draws"/>
                        <Binding Path="Level"/>
                    </MultiBinding>
                </Label>
                <Label Content="{Binding Stats.SinglePlayer.Draws.Total}"
                       Grid.Row="3"
                       Grid.Column="2"/>
            </Grid>
            <Grid Visibility="{Binding GameType, Converter={StaticResource EqualityToVisibilityConverter}, ConverterParameter={x:Static local:GameType.TwoPlayer}}"
                  Height="100"
                  ShowGridLines="True">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Wins"
                       FontStyle="Italic" 
                       Grid.Row="0" 
                       Grid.Column="0"/>
                <Label Content="Total"
                       FontStyle="Italic"
                       Grid.Row="0" 
                       Grid.Column="1"/>

                <Label Content="Player 1 (X)"
                       FontStyle="Italic" 
                       Grid.Row="1" 
                       Grid.Column="0"/>
                <Label Content="{Binding Stats.TwoPlayer.Player1}"
                       Grid.Row="1" 
                       Grid.Column="1"/>

                <Label Content="Player 2 (O)" 
                       FontStyle="Italic"
                       Grid.Row="2" 
                       Grid.Column="0"/>
                <Label Content="{Binding Stats.TwoPlayer.Player2}"
                       Grid.Row="2" 
                       Grid.Column="1"/>

                <Label Content="Draws" 
                       FontStyle="Italic"
                       Grid.Row="3"
                       Grid.Column="0"/>
                <Label Content="{Binding Stats.TwoPlayer.Draws}"
                       Grid.Row="3" 
                       Grid.Column="1"/>
            </Grid>
            <Label Content="{Binding Status}" 
                   Foreground="White" 
                   Background="#49000000" />
        </StackPanel>
        <Label Name="WinnerLabel" 
               FontSize="28" 
               FontFamily="Segoe Print"
               Visibility="Collapsed"
               VerticalContentAlignment="Center" 
               HorizontalContentAlignment="Center"
               HorizontalAlignment="Stretch" 
               VerticalAlignment="Stretch"
               Foreground="DarkSlateBlue"
               Background="#97d3d3d3"/>
    </Grid>
</Window>
